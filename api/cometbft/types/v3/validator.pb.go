// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cometbft/types/v3/validator.proto

package v3

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BlockIdFlag indicates which BlockID the signature is for
type BlockIDFlag int32

const (
	BlockIDFlagUnknown BlockIDFlag = 0
	BlockIDFlagAbsent  BlockIDFlag = 1
	BlockIDFlagCommit  BlockIDFlag = 2
	BlockIDFlagNil     BlockIDFlag = 3
)

var BlockIDFlag_name = map[int32]string{
	0: "BLOCK_ID_FLAG_UNKNOWN",
	1: "BLOCK_ID_FLAG_ABSENT",
	2: "BLOCK_ID_FLAG_COMMIT",
	3: "BLOCK_ID_FLAG_NIL",
}

var BlockIDFlag_value = map[string]int32{
	"BLOCK_ID_FLAG_UNKNOWN": 0,
	"BLOCK_ID_FLAG_ABSENT":  1,
	"BLOCK_ID_FLAG_COMMIT":  2,
	"BLOCK_ID_FLAG_NIL":     3,
}

func (x BlockIDFlag) String() string {
	return proto.EnumName(BlockIDFlag_name, int32(x))
}

func (BlockIDFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b1f03edc17df3c84, []int{0}
}

func init() {
	proto.RegisterEnum("cometbft.types.v3.BlockIDFlag", BlockIDFlag_name, BlockIDFlag_value)
}

func init() { proto.RegisterFile("cometbft/types/v3/validator.proto", fileDescriptor_b1f03edc17df3c84) }

var fileDescriptor_b1f03edc17df3c84 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0xce, 0xcf, 0x4d,
	0x2d, 0x49, 0x4a, 0x2b, 0xd1, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2f, 0x33, 0xd6, 0x2f, 0x4b,
	0xcc, 0xc9, 0x4c, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x84,
	0x29, 0xd1, 0x03, 0x2b, 0xd1, 0x2b, 0x33, 0x96, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xcb, 0xea,
	0x83, 0x58, 0x10, 0x85, 0x5a, 0xd7, 0x19, 0xb9, 0xb8, 0x9d, 0x72, 0xf2, 0x93, 0xb3, 0x3d, 0x5d,
	0xdc, 0x72, 0x12, 0xd3, 0x85, 0x0c, 0xb9, 0x44, 0x9d, 0x7c, 0xfc, 0x9d, 0xbd, 0xe3, 0x3d, 0x5d,
	0xe2, 0xdd, 0x7c, 0x1c, 0xdd, 0xe3, 0x43, 0xfd, 0xbc, 0xfd, 0xfc, 0xc3, 0xfd, 0x04, 0x18, 0xa4,
	0xc4, 0xba, 0xe6, 0x2a, 0x08, 0x21, 0xa9, 0x0d, 0xcd, 0xcb, 0xce, 0xcb, 0x2f, 0xcf, 0x13, 0xd2,
	0xe7, 0x12, 0x41, 0xd5, 0xe2, 0xe8, 0x14, 0xec, 0xea, 0x17, 0x22, 0xc0, 0x28, 0x25, 0xda, 0x35,
	0x57, 0x41, 0x10, 0x49, 0x87, 0x63, 0x52, 0x71, 0x6a, 0x5e, 0x09, 0xa6, 0x06, 0x67, 0x7f, 0x5f,
	0x5f, 0xcf, 0x10, 0x01, 0x26, 0x0c, 0x0d, 0xce, 0xf9, 0xb9, 0xb9, 0x99, 0x25, 0x42, 0x9a, 0x5c,
	0x82, 0xa8, 0x1a, 0xfc, 0x3c, 0x7d, 0x04, 0x98, 0xa5, 0x84, 0xba, 0xe6, 0x2a, 0xf0, 0x21, 0xa9,
	0xf6, 0xcb, 0xcc, 0x91, 0xe2, 0xe8, 0x58, 0x2c, 0xc7, 0xb0, 0x62, 0x89, 0x1c, 0xa3, 0x93, 0xcf,
	0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c,
	0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x19, 0xa5, 0x67, 0x96, 0x64, 0x94,
	0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xc3, 0x83, 0x12, 0xce, 0x48, 0x2c, 0xc8, 0xd4, 0xc7, 0x08,
	0xe0, 0x24, 0x36, 0x70, 0x70, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x5b, 0x2b, 0xbd,
	0x7c, 0x01, 0x00, 0x00,
}
